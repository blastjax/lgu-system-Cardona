"""create individual ctc model

Revision ID: 916b87941508
Revises: 
Create Date: 2024-10-16 21:29:16.794869

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '916b87941508'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('individual_ctcs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ctc_number', sa.String(), nullable=True),
    sa.Column('year', sa.SmallInteger(), nullable=True),
    sa.Column('place_of_issue', sa.String(), nullable=True),
    sa.Column('date_issued', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('tin', sa.Integer(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='genderenum'), nullable=True),
    sa.Column('citizenship', sa.String(), nullable=True),
    sa.Column('civil_status', sa.Enum('SINGLE', 'MARRIED', 'WIDOWED', 'LEGALLY_SEPARATED', name='civilstatusenum'), nullable=True),
    sa.Column('icr_number', sa.String(), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('place_of_birth', sa.String(), nullable=True),
    sa.Column('height_cm', sa.SmallInteger(), nullable=True),
    sa.Column('weight_kg', sa.Float(), nullable=True),
    sa.Column('occupation', sa.String(), nullable=True),
    sa.Column('basic_community_tax', sa.Float(), nullable=True),
    sa.Column('taxable_gross', sa.Float(), nullable=True),
    sa.Column('taxable_salary', sa.Float(), nullable=True),
    sa.Column('taxable_income', sa.Float(), nullable=True),
    sa.Column('interest', sa.Float(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_modified', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('year >= 1900 AND year <= 2999', name='ck_year'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ctc_number', name='uk_ctc_number')
    )
    op.create_index(op.f('ix_individual_ctcs_ctc_number'), 'individual_ctcs', ['ctc_number'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_individual_ctcs_ctc_number'), table_name='individual_ctcs')
    op.drop_table('individual_ctcs')
    # ### end Alembic commands ###
